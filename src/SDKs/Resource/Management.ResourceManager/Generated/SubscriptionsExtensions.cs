// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ResourceManager
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for Subscriptions.
    /// </summary>
    public static partial class SubscriptionsExtensions
    {
            /// <summary>
            /// Gets all available geo-locations.
            /// </summary>
            /// <remarks>
            /// This operation provides all the locations that are available for resource
            /// providers; however, each resource provider may support a subset of this
            /// list.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// The ID of the target subscription.
            /// </param>
            public static LocationListResult ListLocations(this ISubscriptions operations, string subscriptionId)
            {
                return operations.ListLocationsAsync(subscriptionId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets all available geo-locations.
            /// </summary>
            /// <remarks>
            /// This operation provides all the locations that are available for resource
            /// providers; however, each resource provider may support a subset of this
            /// list.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// The ID of the target subscription.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<LocationListResult> ListLocationsAsync(this ISubscriptions operations, string subscriptionId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListLocationsWithHttpMessagesAsync(subscriptionId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets details about a specified subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// The ID of the target subscription.
            /// </param>
            public static Subscription Get(this ISubscriptions operations, string subscriptionId)
            {
                return operations.GetAsync(subscriptionId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets details about a specified subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// The ID of the target subscription.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Subscription> GetAsync(this ISubscriptions operations, string subscriptionId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(subscriptionId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets all subscriptions for a tenant.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static SubscriptionListResult List(this ISubscriptions operations)
            {
                return operations.ListAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets all subscriptions for a tenant.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SubscriptionListResult> ListAsync(this ISubscriptions operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
